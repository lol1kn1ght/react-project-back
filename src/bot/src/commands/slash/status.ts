import { MessageEmbed, type CommandInteraction } from 'discord.js';
import { type Interaction_settings, args_type } from '../../types';
import { InteractionTemplate } from '../../config/templates_list';
import { time } from '@discordjs/builders';

export const settings: Readonly<Interaction_settings> = {
  interaction: {
    name: 'status',
    description: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞',
  },
};

export class Execute extends InteractionTemplate {
  constructor(
    private args: args_type,
    private interaction: CommandInteraction
  ) {
    super(interaction);
    this.execute();
  }

  async execute() {
    try {
      const status_embed = new MessageEmbed({
        title: `–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ ${this.args.client.user?.tag}:`,
        color: this.interaction.guild?.me?.roles.highest.color,
        fields: [
          {
            name: 'üï∞Ô∏è–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:',
            value: `${time(new Date(this.args.client.readyTimestamp!), 'R')}`,
            inline: true,
          },
          {
            name: 'üèì–ü–∏–Ω–≥:',
            value: F.number_discharge(this.args.client.ws.ping),
            inline: true,
          },
          {
            name: 'üìù/-–∫–æ–º–º–∞–Ω–¥—ã:',
            value: `${F.number_discharge(Bot.interaction_commands.size)}`,
            inline: false,
          },
          {
            name: 'üìé–ö–æ–º–º–∞–Ω–¥—ã —Å–æ–æ–±—â–µ–Ω–∏–π:',
            value: `${F.number_discharge(Bot.message_commands.size)}`,
            inline: true,
          },
        ],
        thumbnail: {
          url: this.args.client.user?.displayAvatarURL(),
        },
      });

      return this.interaction.editReply({
        embeds: [status_embed],
      });
    } catch (err) {
      F.handle_error(<Error>err, `/-–∫–æ–º–∞–Ω–¥–∞ ${this.interaction.commandName}`);
      return this.replyFalseH(
        `–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <@${F.config.owner}>`
      );
    }
  }
}
